"""
어떠한 수 N이 1이 될 때가지 다음의 두 과정 중 하나를 반복적으로 선택하여 수행하려고 한다.
단, 두 번째 연산은 N이 K로 나누어떨어질 때만 선택할 수 있다.
1. N에서 1을 뺀다.
2. N을 K로 나눈다.
N과 K가 주어질 때 N이 1이 될 때까지 1번 혹은 2번의 과정을 수행해야 하는 최소 횟수를 구하는 프로그램을 작성하시오.
입력 조건:
1. 첫째 줄에 N과 K가 공백으로 구분되며 각각 자연수로 주어진다. 이때 입력으로 주어지는 N은 항상 K보다 크거나 같다.
출력 조건:
2. 첫째 줄에 N이 1이 될 때까지 1번 혹은 2번의 과정을 수행해야 하는 횟수의 최솟값을 출력한다
"""
# n, k에 공백을 포함한 입력 값 할당
n, k = map(int, input().split())

# 문제 풀기 전 N이 1이 될 때까지 실행한다 해서 while문이 적합하다고 생각했다.
# count 변수를 선언해서 횟수를 체크해주는 변수를 만든다.
count = 0

# 일단 N이 k로 나누어떨어질 때만 선택할 수 있으므로 N이 K로 나누어질 때, 그 외의 경우로 생각해봤다.
while n > 1:
    # N이 K로 나누어 지면 N의 몫을 저장 후 count변수 1 증가.
    if n % k == 0:
        n = n // k
        count += 1
    # 그 외의 경우 즉 N이 K로 나누어지지 않은 경우 N의 값을 1 빼준 후 count변수 1 증가
    else:
        n = n - 1
        count += 1
        
print(count)    