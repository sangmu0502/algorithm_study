"""
현민이는 게임 캐릭터가 맵 안에서 움직이는 시스템을 개발 중이다. 캐릭터가 있는 장소는 1 x 1 크기의 정사각형으로 이뤄진 N x M 크기의 직사각형으로,
각각의 칸은 육지 또는 바다이다. 캐릭터는 동서남북 중 한 곳을 바라본다.
맵의 각 칸은 (A, B)로 나타낼 수 있고, A는 북쪽으로부터 떨어진 칸의 개수 B는 서쪽으로부터 떨어진 칸의 개수이다.
캐릭터는 상하좌우로 움직일 수 있고, 바다로 되어 있는 공간에는 갈 수 없다.

캐릭터의 움직임 메뉴얼
    1. 현재 위치에서 현재 방향을 기준으로 왼쪽 방향(반시계 방향으로 90도 회전한 방향)부터 차례대로 갈 곳을 정한다.
    2. 캐릭터의 바로 왼쪽 방향에 아직 가보지 않은 칸이 존재한다면, 왼쪽 방향으로 회전한 다음 왼쪽으로 한 칸을 전진하다. 왼쪽 방향에 가보지 않은
    칸이 없다면, 왼쪽 방향으로 회전만 수행하고 1단계로 돌아간다.
    3. 만약 네 방향 모두 이미 가본 칸이거나 바다로 되어 있는 칸인 경우에는, 바라보는 방향을 유지한 채로 한 칸 뒤로 가고 1단계로 돌아간다. 단, 이때
    뒤쪽 방향이 바다인 칸이라 뒤로 갈 수 없는 경우에는 움직임을 멈춘다.
메뉴얼에 따라 캐릭터를 이동시킨 뒤에, 캐릭터가 방문한 칸의 수를 출력하는 프로그램을 만드시오.

입력조건
    - 첫째 줄에 맵의 세로 크기 N과 가로 크기 M을 공백으로 구분하여 입력한다. (3 <= N, M <= 50)
    - 둘째 줄에 게임 캐릭터가 있는 칸의 좌표 (A, B)와 바라보는 방향 d가 각각 서로 공백으로 구분하여 주어진다. 방향 d의 값으로는 다음과 같이
    4가지가 존재한다. 0: 북쪽, 1: 동쪽, 2: 남쪽, 3: 서쪽
    - 셋째 줄부터 맵이 육지인지 바디인지에 대한 정보가 주어진다. N개의 줄에 맵의 상태가 북쪽부터 남쪽 순서대로, 각 줄의 데이터는 서쪽부터 동쪽
    순서대로 주어진다. 맵의 외곽은 항상 바다로 되어 있다. 0: 육지, 1: 바다
    - 처음에 게임 캐릭터가 위치한 칸의 상태는 항상 육지이다.
 
출력 조건
    - 첫째 줄에 이동을 마친 후 캐릭터가 방문한 칸의 수를 출력한다.
"""

# 맵의 크기 : n, m 입력
n, m = map(int, input().split())

# current 위치 : A, B, direction 입력
x, y, dir = map(int, input().split())

# 게임 맵 정보 입력 ? 아래와 같이 원소 하나씩 입력받고 list에 추가하는 과정을 동시에 하면 다음과 같이 된다. (출처 : https://dailylifeofdeveloper.tistory.com/132 )
"""
arr = [for _ in range (B)]
for i in range(B):
    arr[i] = list(map(int, input().split()))
arr = []
for i in range(B):    
	arr.append(list(map(int, input().split())))
"""
game_map = [list(map(int, input().split())) for first_map in range(n)]

# 왼쪽 하루죙일 돌아야 하니까 함수식으로 표현 해보기.
# 현재보는 위치 + 3 % 4 = 왼쪽 돌기
def turn_left(dir):
    return (dir + 3) % 4

# 중요 !!!!!!!!!!!!!!!!!!!!!!!! 내가 지나갔던 곳을 표시해주기 위한 새로운 2차원 배열 생성
visit = []

for new_map in range(n):
    visit.append([0] * m)
visit[x][y] = 1 #  시작 위치 = 1

result = 1
count = 0

# 내가 만든 맵을 토대로 따라 들어가기.
# 캐릭터 좌부터 반시계 갈곳 정함 (False가 출력 될 때 까지. 언제 False 출력 ? 네 곳다 가본칸이고 후진 했을 때 바다가 나오면 종료(break))
while True:
    dir = turn_left(dir) # 왼쪽으로 돌기
    # 현재 위치 = (x, y) 내가 보는 위치 : (x+?, y+?) 이게 0이면 ? 내가 가는 위치 : (x+?, y+?)
    dir_x = [-1, 0, 1, 0]
    dir_y = [0, 1, 0, -1]

    next_x = x + dir_x[dir]
    next_y = y + dir_y[dir]

    
    # if 왼쪽이 가보지 않은 칸
    # 내가 바라본 칸 이라는 뜻 ? 북이면 윗 칸이 0임을 판별. 맵에서 0임을 어떻게? list형으로 받아서?
    # 여기까지 생각해보니까 현재 내 위치, 내가 위치한 곳을 어떻게 1로 처리해줄지 생각.
    # 내 위치 = (x, y), 북(0) : (x-1, y), 동(1) : (x, y+1). 남(2) : (x+1, 0), 서(3): (x, y-1)
    if game_map[next_x][next_y] == 0 and visit[next_x][next_y] == 0:
        x = next_x
        y = next_y
        visit[x][y] = 1
        result += 1
        count = 0
    else:
        count += 1
    # if 네 면이 다 1일 때.
    # 어떻게 네 면이 다 1임을 알까
    # 위쪽 왼쪽으로 돌 때 count 변수 1씩 증가해서 4가 되면 보는 방향 전진
    
    if count == 4:
        #뒤로 후진 (전진 좌표를 반대로 더하기)
        next_x = x - dir_x[dir]
        next_y = y - dir_y[dir]

        if game_map[next_x][next_y] == 0:
            x = next_x
            y = next_y            
        else:
            break
        
        count = 0
    
    # 내가 간 칸 변수 설정 (60번째 줄 result)
    # 어떻게 내가 간 칸수에 1을 할당해줄까? <<<<<< 할당 안해주면 무한루프에 빠짐
    # 새로운 맵 만들어 주기!
print(result)





